q()
library(dplyr)
library(tidyr)
library(readr)
library(stringr)
setwd("C:/Users/freib/OneDrive - Indiana University/Research/Qing_HonorsThesis/SES_social_pain_10-5-2021")
list.files()
dat = read.csv("SocialPain-SES_9-23-2021_OriginalData_NUMERIC.csv")
setwd("C:/Users/freib/OneDrive - Indiana University/Research/Qing_HonorsThesis/SES_social_pain_10-5-2021")
dat = read.csv("SocialPain-SES_9-23-2021_OriginalData_NUMERIC.csv")
mcheck = read.csv("social_pain_SES_mani_check_DONE.csv", colClasses = "character")
mcheck$stim_id = as.numeric(mcheck$stim_id)
mcheck$MC_check[is.na(mcheck$MC_check)] <- 0
mcheck$MC_check[mcheck$MC_check == ""]  <- 0
# Eliminate first two rows of Qualtrics data
dat = dat[-c(1,2),]
# Remove participants with status = 1 (survey preview data)
dat = dat[dat$Status != 1,]
# Wide to long ----
dat %>%
select(starts_with("w"), ResponseId, Gender, Age, Country, Country_6_TEXT, Race, Race_7_TEXT, Ethnicity,
Ethnicity_5_TEXT) %>%
pivot_longer(cols = starts_with("w"), names_to = "trial_names", values_to = "values") %>%
separate(trial_names, into = c("trial_names", "item"), sep = "_") -> ldat
ldat$item[is.na(ldat$item)] <- "MC"
# Create SES variable
ldat %>%
mutate(SES = case_when(
grepl("H", trial_names) ~ "high",
grepl("L", trial_names) ~ "low"
)) -> ldat
# Create stimulus ID variable
ldat$stim_id = parse_number(ldat$trial_names)
ldat = ldat[ldat$values != "",]
ldat$SES_id = paste(ldat$SES, ldat$stim_id, sep = "_")
# Manipulation checks ----
# Combine hard coded manipulation checks
no_mc_dat = ldat[ldat$item != "MC",]
no_mc_dat$MC_check = "NA"
# Combine two data sets
dat = bind_rows(no_mc_dat, mcheck)
dat$MC_check = as.numeric(dat$MC_check)
dat[dat$item == "MC",] %>%
group_by(ResponseId) %>%
summarise(sumMC = sum(MC_check)) -> mc_per_subs
keep_subs = mc_per_subs$ResponseId[mc_per_subs$sumMC >= 14]
dat = dat[(dat$ResponseId %in% keep_subs),]
# Eliminate manipulation check data
dat = dat[dat$item != "MC",]
dat$values = as.numeric(dat$values)
View(dat)
unique(dat$item)
dat %>%
group_by(item, ResponseId, SES, Gender, Age, Country, Race, Ethnicity) %>%
summarise(mean_pain = mean(values, na.rm = TRUE)) -> sum_dat_by-item
dat %>%
group_by(item, ResponseId, SES, Gender, Age, Country, Race, Ethnicity) %>%
summarise(mean_pain = mean(values, na.rm = TRUE)) -> sum_dat_item
View(sum_dat_item)
unique(sum_dat_item$item)
dat %>%
group_by(item, ResponseId, SES, Gender, Age, Country, Race, Ethnicity) %>%
summarise(mean_pain = mean(values, na.rm = TRUE)) -> sum_dat_item
# Write csv ----
filename = "social_pain_SES_clean_data_by-item.csv"
write.csv(sum_dat_item, filename, row.names = FALSE)
setwd("C:/Users/freib/OneDrive - Indiana University/Research/Qing_HonorsThesis/SocialPainXSES_Markdown_10-6-2021/By-Item-Clean")
setwd("C:/Users/freib/OneDrive - Indiana University/Research/Qing_HonorsThesis/SocialPainXSES_Markdown_10-6-2021/By-Item-Clean")
list.files()
rm(list=ls())  # Clears all the variables from memory.
graphics.off() # Clears all the graphs.
library(effectsize)
library(ggplot2)
library(tidyverse)
library(effectsize)
library(tidyverse)
# Read in csv
setwd("C:/Users/freib/OneDrive - Indiana University/Research/Qing_HonorsThesis/SocialPainXSES_Markdown_10-6-2021/By-Item-Clean")
dat = read.csv("social_pain_SES_clean_data_by-item.csv")
View(dat)
View(dat)
d1 <- dat %>%
filter(item=="1")
View(d1)
134/3
134/2
View(d1)
unique(7d1$item)
unique(d1$item)
unique(d1$ResponseId)
# Define Model
t.test(mean_pain ~ SES, paired = TRUE, data = d1)
# Cohen's D
cohens_d(mean_pain ~ SES,
data = dat,
paired = TRUE)
d1 <- dat %>%
filter(item=="1")
unique(d1$item)
unique(d1$ResponseId)
# Define Model
t.test(mean_pain ~ SES, paired = TRUE, data = d1)
d1 %>%
group_by(SES) %>%
summarise(M = mean(mean_pain), SD = sd(mean_pain)) -> mean_d1
# Cohen's D
cohens_d(mean_pain ~ SES,
data = d1,
paired = TRUE)
mean_d1
#Item 1: This person's bestfriend moves across the country
d1 <- dat %>%
filter(item=="1")
unique(d1$item)
unique(d1$ResponseId)
# Define Model
t.test(mean_pain ~ SES, paired = TRUE, data = d1)
d1 %>%
group_by(SES) %>%
summarise(M = mean(mean_pain), SD = sd(mean_pain)) -> mean_d1
mean_d1
# Cohen's D
cohens_d(mean_pain ~ SES,
data = d1,
paired = TRUE)
#Item 2: This person realizes after walking around all day that a pair of underwear was stuck to the back of their shirt.
d2 <- dat %>%
filter(item=="2")
unique(d2$item)
unique(d2$ResponseId)
# Define Model
t.test(mean_pain ~ SES, paired = TRUE, data = d2)
d2 %>%
group_by(SES) %>%
summarise(M = mean(mean_pain), SD = sd(mean_pain)) -> mean_d2
mean_d2
# Cohen's D
cohens_d(mean_pain ~ SES,
data = d2,
paired = TRUE)
table(unique(d1$ResponseId))
count(unique(d1$ResponseId))
sum(unique(d1$ResponseId))
nrow(unique(d1$ResponseId))
(unique(d1$ResponseId))
unique(d1$item)
q()
