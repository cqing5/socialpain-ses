?parse
eval(parse(text = "aggress"))
curr_var = "aggress"
x = select(data, c(group, pt, eval(parse(text = curr_var))))
x = select(data, c(group, pt, eval(curr_var))
x = select(data, c(group, pt, eval(curr_var)))
x = select(data, c(group, pt, eval(curr_var)))
x = select(data, c(group, pt, eval(parse(curr_var)))
x = select(data, c(group, pt, eval(parse(curr_var))))
x = select(data, c(group, pt, eval(parse(curr_var))))
x = select(data, c(group, pt))
curr_var = data[,29]
curr_data = data.frame(data$pt, data$group, curr_var)
vars = c(29:41)
mean_cont_int = mean(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "control"])
mean_cont_int = round(mean(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "control"]),2)
sd_cont_int = round(sd(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "control"]),2)
means_cont_in = paste(mean_cont_in, "(", sd_cont_in, ")")
mean_cont_in = round(mean(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "control"]),2)
sd_cont_in = round(sd(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "control"]),2)
means_cont_in = paste(mean_cont_in, "(", sd_cont_in, ")")
means_cont_in = paste(mean_cont_in, "(", sd_cont_in, ")", sep = "")
# Mean Outgroup Control
mean_cont_out = round(mean(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "control"]),2)
sd_cont_out = round(sd(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "control"]),2)
means_cont_out = paste(mean_cont_out, " (", sd_cont_out, ")", sep = "")
means_cont_in = paste(mean_cont_in, " (", sd_cont_in, ")", sep = "")
vars = c(29:41)
curr_var = data[,29]
curr_data = data.frame(data$pt, data$group, curr_var)
# Mean Ingroup Control
mean_cont_in = round(mean(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "control"]),2)
sd_cont_in = round(sd(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "control"]),2)
means_cont_in = paste(mean_cont_in, " (", sd_cont_in, ")", sep = "")
# Mean Outgroup Control
mean_cont_out = round(mean(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "control"]),2)
sd_cont_out = round(sd(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "control"]),2)
means_cont_out = paste(mean_cont_out, " (", sd_cont_out, ")", sep = "")
# Mean Ingroup PT
mean_pt_in = round(mean(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "pt"]),2)
sd_pt_in = round(sd(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "pt"]),2)
means_pt_ingroup = paste(mean_pt_in, " (", sd_pt_in, ")", sep = "")
# Mean Outgroup PT
mean_pt_out = round(mean(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "pt"]),2)
sd_pt_out = round(sd(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "pt"]),2)
means_pt_ingroup = paste(mean_pt_out, " (", sd_pt_out, ")", sep = "")
vars = c(29:41)
curr_var = data[,29]
curr_data = data.frame(data$pt, data$group, curr_var)
# Mean Ingroup Control
mean_cont_in = round(mean(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "control"]),2)
sd_cont_in = round(sd(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "control"]),2)
means_cont_in = paste(mean_cont_in, " (", sd_cont_in, ")", sep = "")
# Mean Outgroup Control
mean_cont_out = round(mean(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "control"]),2)
sd_cont_out = round(sd(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "control"]),2)
means_cont_out = paste(mean_cont_out, " (", sd_cont_out, ")", sep = "")
# Mean Ingroup PT
mean_pt_in = round(mean(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "pt"]),2)
sd_pt_in = round(sd(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "pt"]),2)
means_pt_ingroup = paste(mean_pt_in, " (", sd_pt_in, ")", sep = "")
# Mean Outgroup PT
mean_pt_out = round(mean(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "pt"]),2)
sd_pt_out = round(sd(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "pt"]),2)
means_pt_outgroup = paste(mean_pt_out, " (", sd_pt_out, ")", sep = "")
# Cohens d (control)
d_cont = cohens_d(curr_var ~ data.group, data = curr_data[curr_data$data.pt == "pt",], paired = TRUE)
View(d_cont)
# Cohens d (control)
d_cont = round(cohens_d(curr_var ~ data.group, data = curr_data[curr_data$data.pt == "pt",], paired = TRUE)[1], 2)
# Cohens d (control)
d_cont = round(abs(cohens_d(curr_var ~ data.group, data = curr_data[curr_data$data.pt == "pt",], paired = TRUE)[1], 2))
# Cohens d (control)
d_cont = abs(round(cohens_d(curr_var ~ data.group, data = curr_data[curr_data$data.pt == "pt",], paired = TRUE)[1], 2))
View(d_cont)
# Cohens d (control)
d_cont = abs(round(cohens_d(curr_var ~ data.group, data = curr_data[curr_data$data.pt == "pt",], paired = TRUE)[[1]], 2))
# Cohens d (control)
d_cont = abs(round(cohens_d(curr_var ~ data.group, data = curr_data[curr_data$data.pt == "control",], paired = TRUE)[[1]], 2))
# Cohens d (pt)
d_cont = abs(round(cohens_d(curr_var ~ data.group, data = curr_data[curr_data$data.pt == "pt",], paired = TRUE)[[1]], 2))
# Cohens d (pt)
d_pt = abs(round(cohens_d(curr_var ~ data.group, data = curr_data[curr_data$data.pt == "pt",], paired = TRUE)[[1]], 2))
vars = c(29:41)
curr_var = data[,29]
curr_data = data.frame(data$pt, data$group, curr_var)
# Mean Ingroup Control
mean_cont_in = round(mean(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "control"]),2)
sd_cont_in = round(sd(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "control"]),2)
means_cont_in = paste(mean_cont_in, " (", sd_cont_in, ")", sep = "")
# Mean Outgroup Control
mean_cont_out = round(mean(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "control"]),2)
sd_cont_out = round(sd(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "control"]),2)
means_cont_out = paste(mean_cont_out, " (", sd_cont_out, ")", sep = "")
# Cohens d (control)
d_cont = abs(round(cohens_d(curr_var ~ data.group, data = curr_data[curr_data$data.pt == "control",], paired = TRUE)[[1]], 2))
# Mean Ingroup PT
mean_pt_in = round(mean(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "pt"]),2)
sd_pt_in = round(sd(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "pt"]),2)
means_pt_ingroup = paste(mean_pt_in, " (", sd_pt_in, ")", sep = "")
# Mean Outgroup PT
mean_pt_out = round(mean(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "pt"]),2)
sd_pt_out = round(sd(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "pt"]),2)
means_pt_outgroup = paste(mean_pt_out, " (", sd_pt_out, ")", sep = "")
# Cohens d (pt)
d_pt = abs(round(cohens_d(curr_var ~ data.group, data = curr_data[curr_data$data.pt == "pt",], paired = TRUE)[[1]], 2))
i = 29
curr_var = data[,i]
i = 1
curr_var = data[,vars[i]]
means_cont_in = list()
means_cont_out = list()
vars = NULL
Vars = c(29:41)
for (i in 1:length(Vars)){
curr_var = data[,vars[i]]
curr_data = data.frame(data$pt, data$group, curr_var)
# Mean Ingroup Control
mean_cont_in = round(mean(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "control"]),2)
sd_cont_in = round(sd(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "control"]),2)
means_cont_in[i] = paste(mean_cont_in, " (", sd_cont_in, ")", sep = "")
# Mean Outgroup Control
mean_cont_out = round(mean(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "control"]),2)
sd_cont_out = round(sd(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "control"]),2)
means_cont_out[i] = paste(mean_cont_out, " (", sd_cont_out, ")", sep = "")
# Cohens d (control)
d_cont[i] = abs(round(cohens_d(curr_var ~ data.group, data = curr_data[curr_data$data.pt == "control",], paired = TRUE)[[1]], 2))
# Mean Ingroup PT
mean_pt_in = round(mean(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "pt"]),2)
sd_pt_in = round(sd(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "pt"]),2)
means_pt_ingroup[i] = paste(mean_pt_in, " (", sd_pt_in, ")", sep = "")
# Mean Outgroup PT
mean_pt_out = round(mean(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "pt"]),2)
sd_pt_out = round(sd(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "pt"]),2)
means_pt_outgroup[i] = paste(mean_pt_out, " (", sd_pt_out, ")", sep = "")
# Cohens d (pt)
d_pt[i] = abs(round(cohens_d(curr_var ~ data.group, data = curr_data[curr_data$data.pt == "pt",], paired = TRUE)[[1]], 2))
}
View(curr_var)
for (i in 1:length(Vars)){
curr_var = data[,Vars[i]]
curr_data = data.frame(data$pt, data$group, curr_var)
# Mean Ingroup Control
mean_cont_in = round(mean(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "control"]),2)
sd_cont_in = round(sd(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "control"]),2)
means_cont_in[i] = paste(mean_cont_in, " (", sd_cont_in, ")", sep = "")
# Mean Outgroup Control
mean_cont_out = round(mean(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "control"]),2)
sd_cont_out = round(sd(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "control"]),2)
means_cont_out[i] = paste(mean_cont_out, " (", sd_cont_out, ")", sep = "")
# Cohens d (control)
d_cont[i] = abs(round(cohens_d(curr_var ~ data.group, data = curr_data[curr_data$data.pt == "control",], paired = TRUE)[[1]], 2))
# Mean Ingroup PT
mean_pt_in = round(mean(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "pt"]),2)
sd_pt_in = round(sd(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "pt"]),2)
means_pt_ingroup[i] = paste(mean_pt_in, " (", sd_pt_in, ")", sep = "")
# Mean Outgroup PT
mean_pt_out = round(mean(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "pt"]),2)
sd_pt_out = round(sd(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "pt"]),2)
means_pt_outgroup[i] = paste(mean_pt_out, " (", sd_pt_out, ")", sep = "")
# Cohens d (pt)
d_pt[i] = abs(round(cohens_d(curr_var ~ data.group, data = curr_data[curr_data$data.pt == "pt",], paired = TRUE)[[1]], 2))
}
means_pt_ingroup
table_data = data.frame(means_cont_in, means_cont_out, d_cont, means_pt_in, means_pt_out, d_pt)
means_cont_in = list()
means_cont_out = list()
means_pt_in = list()
means_pt_out = list()
Vars = c(29:41)
for (i in 1:length(Vars)){
curr_var = data[,Vars[i]]
curr_data = data.frame(data$pt, data$group, curr_var)
# Mean Ingroup Control
mean_cont_in = round(mean(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "control"]),2)
sd_cont_in = round(sd(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "control"]),2)
means_cont_in[i] = paste(mean_cont_in, " (", sd_cont_in, ")", sep = "")
# Mean Outgroup Control
mean_cont_out = round(mean(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "control"]),2)
sd_cont_out = round(sd(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "control"]),2)
means_cont_out[i] = paste(mean_cont_out, " (", sd_cont_out, ")", sep = "")
# Cohens d (control)
d_cont[i] = abs(round(cohens_d(curr_var ~ data.group, data = curr_data[curr_data$data.pt == "control",], paired = TRUE)[[1]], 2))
# Mean Ingroup PT
mean_pt_in = round(mean(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "pt"]),2)
sd_pt_in = round(sd(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "pt"]),2)
means_pt_in[i] = paste(mean_pt_in, " (", sd_pt_in, ")", sep = "")
# Mean Outgroup PT
mean_pt_out = round(mean(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "pt"]),2)
sd_pt_out = round(sd(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "pt"]),2)
means_pt_out[i] = paste(mean_pt_out, " (", sd_pt_out, ")", sep = "")
# Cohens d (pt)
d_pt[i] = abs(round(cohens_d(curr_var ~ data.group, data = curr_data[curr_data$data.pt == "pt",], paired = TRUE)[[1]], 2))
}
table_data = data.frame(means_cont_in, means_cont_out, d_cont, means_pt_in, means_pt_out, d_pt)
View(table_data)
means_cont_in
unlist(means_cont_in
)
table_data = data.frame(unlist(means_cont_in), unlist(means_cont_out), unlist(d_cont), unlist(means_pt_in), unlist(means_pt_out), unlist(d_pt))
View(table_data)
trait = c("Aggressive", "Attractive", "Caring", "Confident", "Dominant", "Emotionally Stable", "Intelligent", "Mean", "Responsible", "Sociable", "Trustworthy", "Unhappy", "Weird")
table_data = data.frame(trait, unlist(means_cont_in), unlist(means_cont_out), unlist(d_cont), unlist(means_pt_in), unlist(means_pt_out), unlist(d_pt))
View(table_data)
# Supplemental Materials -- Gender
# Two-way within-subjects MANOVA
man1s = manova(cbind(aggressive, attract, caring, conf, dominant, emostable, int, mean, responsible, sociable, trust, unhappy, weird) ~ group*pt*gender + Error(ResponseId/(group*pt)), data = data)
means_cont_in = list()
means_cont_out = list()
means_pt_in = list()
means_pt_out = list()
Vars = c(29:41)
for (i in 1:length(Vars)){
curr_var = data[,Vars[i]]
curr_data = data.frame(data$pt, data$group, curr_var)
# Mean Ingroup Control
mean_cont_in = round(mean(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "control"]),2)
sd_cont_in = round(sd(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "control"]),2)
means_cont_in[i] = paste(mean_cont_in, " (", sd_cont_in, ")", sep = "")
# Mean Outgroup Control
mean_cont_out = round(mean(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "control"]),2)
sd_cont_out = round(sd(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "control"]),2)
means_cont_out[i] = paste(mean_cont_out, " (", sd_cont_out, ")", sep = "")
# Cohens d (control)
d_cont[i] = abs(round(cohens_d(curr_var ~ data.group, data = curr_data[curr_data$data.pt == "control",], paired = TRUE)[[1]], 2))
# Mean Ingroup PT
mean_pt_in = round(mean(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "pt"]),2)
sd_pt_in = round(sd(curr_data$curr_var[curr_data$data.group == "ingroup" & curr_data$data.pt == "pt"]),2)
means_pt_in[i] = paste(mean_pt_in, " (", sd_pt_in, ")", sep = "")
# Mean Outgroup PT
mean_pt_out = round(mean(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "pt"]),2)
sd_pt_out = round(sd(curr_data$curr_var[curr_data$data.group == "outgroup" & curr_data$data.pt == "pt"]),2)
means_pt_out[i] = paste(mean_pt_out, " (", sd_pt_out, ")", sep = "")
# Cohens d (pt)
d_pt[i] = abs(round(cohens_d(curr_var ~ data.group, data = curr_data[curr_data$data.pt == "pt",], paired = TRUE)[[1]], 2))
}
trait = c("Aggressive", "Attractive", "Caring", "Confident", "Dominant", "Emotionally Stable", "Intelligent", "Mean", "Responsible", "Sociable", "Trustworthy", "Unhappy", "Weird")
table_data = data.frame(trait, unlist(means_cont_in), unlist(means_cont_out), unlist(d_cont), unlist(means_pt_in), unlist(means_pt_out), unlist(d_pt))
install.packages(c("afex", "arm", "backports", "bayestestR", "BH", "broom", "callr", "car", "carData", "cli", "clipr", "coda", "colorspace", "crayon", "cubelyr", "data.table", "DBI", "dbplyr", "digest", "dplyr", "effectsize", "emmeans", "fansi", "forcats", "Formula", "fs", "generics", "ggplot2", "glue", "haven", "Hmisc", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "jsonlite", "knitr", "labeling", "lavaan", "lme4", "lmerTest", "lubridate", "magrittr", "maptools", "MBESS", "mnormt", "nloptr", "OpenMx", "openssl", "openxlsx", "parameters", "pbkrtest", "performance", "pillar", "pkgbuild", "pkgload", "processx", "ps", "psych", "quantreg", "R6", "Rcpp", "RcppEigen", "RcppParallel", "readr", "reprex", "rlang", "rmarkdown", "rpf", "rprojroot", "rstudioapi", "rvest", "semTools", "sjlabelled", "sjmisc", "sjstats", "sp", "StanHeaders", "statmod", "stringi", "sys", "testthat", "tibble", "tidyr", "tinytex", "TMB", "vctrs", "withr", "xfun", "XML", "zip"))
knitr::opts_chunk$set(echo = TRUE)
library(afex)
library(effectsize)
dat = read.csv("immrc_iat_labels_dehum_clean_data.csv")
anim_aov = aov_car(animal_dehum ~ immigrant*iat + Error(ResponseId/immigrant*iat), data = dat, anova_table = list(es = "pes"))
anim_aov
eta_squared(anim_aov)
t.test(anim_aov ~ immigrant, paired = TRUE, data = dat[dat$iat == "high",])
t.test(animal_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "high",])
cohens_d(animal_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "high",])
t.test(animal_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "low",])
cohens_d(animal_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "low",])
dat %>%
group_by(iat) %>%
summarise(MEAN = round(mean(animal_dehum),2), SD = round(sd(animal_dehum),2))
library(dplyr)
anim_aov = aov_car(animal_dehum ~ immigrant*iat + Error(ResponseId/immigrant*iat), data = dat, anova_table = list(es = "pes"))
anim_aov
eta_squared(anim_aov)
t.test(animal_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "high",])
cohens_d(animal_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "high",])
t.test(animal_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "low",])
cohens_d(animal_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "low",])
dat %>%
group_by(iat) %>%
summarise(MEAN = round(mean(animal_dehum),2), SD = round(sd(animal_dehum),2))
dat %>%
group_by(immigrant) %>%
summarise(MEAN = round(mean(animal_dehum),2), SD = round(sd(animal_dehum),2))
anim_aov = aov_car(animal_dehum ~ immigrant*iat + Error(ResponseId/immigrant*iat), data = dat, anova_table = list(es = "pes"))
anim_aov
eta_squared(anim_aov)
t.test(animal_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "high",])
cohens_d(animal_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "high",])
t.test(animal_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "low",])
cohens_d(animal_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "low",])
eta_squared(anim_aov)
t.test(animal_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "high",])
cohens_d(animal_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "high",])
t.test(animal_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "low",])
cohens_d(animal_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "low",])
dat %>%
group_by(immigrant) %>%
summarise(MEAN = round(mean(animal_dehum),2), SD = round(sd(animal_dehum),2))
mech_aov = aov_car(mech_dehum ~ immigrant*iat + Error(ResponseId/immigrant*iat), data = dat, anova_table = list(es = "pes"))
mech_dehum
mech_aov
eta_squared(mech_aov)
t.test(mech_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "high",])
cohens_d(mech_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "high",])
t.test(mech_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "low",])
cohens_d(mech_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "low",])
dat %>%
group_by(immigrant) %>%
summarise(MEAN = round(mean(mech_dehum),2), SD = round(sd(mech_dehum),2))
mech_aov
eta_squared(mech_aov)
mech_aov
eta_squared(mech_aov)
t.test(mech_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "high",])
cohens_d(mech_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "high",])
t.test(mech_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "low",])
cohens_d(mech_dehum ~ immigrant, paired = TRUE, data = dat[dat$iat == "low",])
dat %>%
group_by(immigrant, iat) %>%
summarise(MEAN = round(mean(mech_dehum),2), SD = round(sd(mech_dehum),2))
dat %>%
group_by(iat, immigrant) %>%
summarise(MEAN = round(mean(mech_dehum),2), SD = round(sd(mech_dehum),2))
10*0.22+9*0.2+9*0.2+8*0.2+7*0.18
0.22*10
0.22*10+0.2*9+0.2*9+0.2*9+9*0.18
0.22*10+0.2*10+0.2*9+0.2*9+9*0.18
library(afex)
library(ggplot2)
dat = read.csv("migrc_multi_group_cis_ratings_clean_data.csv")
dat$ResponseId = as.factor(dat$ResponseId)
dat$region = as.factor(dat$region)
dat$migrant = as.factor(dat$migrant)
# Threat
aov_threat = aov_car(threat ~ region*migrant + Error(ResponseId/region*migrant), data = dat, anova_table = (es = "pes"))
plot_dat = afex_plot(aov_threat, x = "migrant", trace = "region", return = "data", error = "within")$means
6845+300+900
4000+910+600+500
4000+910+600+1600
5100+300+450
6845+750
sum(217
327
110
115
209
197
95
141)
?sum()
sum(217, 327, 110
,115
,209
,197
95,
,141)
sum(217, 327, 110,115,209,197,95,141)
185*12
2220+500
160*12
1920+500
34*12
300/12
75*12
2420-708
2420-1300
24*7
168*3
library(dplyr)
setwd("C:/Users/Ryan/OneDrive - Indiana University/hugenberg_lab/SES_social_pain")
list.files()
dat = read.csv("SocialPain-SES_9-23-2021_OriginalData_NUMERIC.csv")
names(dat)
library(tidyr)
x = names(dat)[starts_with("w")]
grepl("w", names(dat))
names(dat)
# Wide to long ----
dat %>%
select(starts_with("w"), ResponseId, Gender, Age, Country, Country_6_TEXT, Race, Race_7_TEXT, Ethnicity,
Ethnicity_5_TEXT) %>%
pivot_longer(cols = starts_with("w"), names_to = "trial_names", values_to = "values") -> x
View(x)
head(dat)
View(dat)
y = dat[-2,]
View(y)
y = dat[-c(1,2),]
View(y)
# Remove participants with status = 1 (survey preview data)
dat = dat[dat$Status != 1,]
View(dat)
dat = read.csv("SocialPain-SES_9-23-2021_OriginalData_NUMERIC.csv")
# Eliminate first two rows of Qualtrics data
dat = dat[-c(1,2),]
# Remove participants with status = 1 (survey preview data)
dat = dat[dat$Status != 1,]
View(dat)
# Wide to long ----
dat %>%
select(starts_with("w"), ResponseId, Gender, Age, Country, Country_6_TEXT, Race, Race_7_TEXT, Ethnicity,
Ethnicity_5_TEXT) %>%
pivot_longer(cols = starts_with("w"), names_to = "trial_names", values_to = "values") -> x
View(x)
# Wide to long ----
dat %>%
select(starts_with("w"), ResponseId, Gender, Age, Country, Country_6_TEXT, Race, Race_7_TEXT, Ethnicity,
Ethnicity_5_TEXT) %>%
pivot_longer(cols = starts_with("w"), names_to = "trial_names", values_to = "values") -> ldat
View(ldat)
unique(ldat$trial_names)
ldat$SES = NA
ldat$SES = NULL
if (grepl("H", ldat$trial_names)) {
ldat$SES = "high"
} else if (grepl("L", ldat$trial_names)) {
ldat$SES = "low"
} else {
ldat$SES = NA
}
View(ldat)
# Create stimulus variables
ldat %>%
mutate(SES = case_when(
grepl("H", trial_names) ~ "high",
grepl("L", trial_names) ~ "low"
)) -> ldat
View(ldat)
unique(ldat$SES)
unique(ldat$trial_names)
# Wide to long ----
dat %>%
select(starts_with("w"), ResponseId, Gender, Age, Country, Country_6_TEXT, Race, Race_7_TEXT, Ethnicity,
Ethnicity_5_TEXT) %>%
pivot_longer(cols = starts_with("w"), names_to = "trial_names", values_to = "values") %>%
separate(trial_names, into = c("trial_names", "item"), sep = "_") -> ldat
View(ldat)
ldat$item[is.na(ldat$item)] <- "MC"
View(ldat)
library(readr)
# Create stimulus ID variable
ldat$stim_id = parse_number(ldat$trial_names)
View(ldat)
# Create SES variable
ldat %>%
mutate(SES = case_when(
grepl("H", trial_names) ~ "high",
grepl("L", trial_names) ~ "low"
)) -> ldat
# Create stimulus ID variable
ldat$stim_id = parse_number(ldat$trial_names)
View(ldat)
MC_dat = ldat[ldat$item = "MC",]
MC_dat = ldat[ldat$item == "MC",]
View(MC_dat)
MC_dat = arrange(MC_dat, stim_id)
View(ldat)
MC_dat = MC_dat[!(is.na(MC_dat$values)),]
MC_dat = arrange(MC_dat, stim_id)
View(MC_dat)
MC_dat = ldat[ldat$item == "MC",]
MC_dat = MC_dat[MC_dat$values != "",]
View(MC_dat)
View(ldat)
ldat = ldat[ldat$values != "",]
View(ldat)
136*20
136*20*10
# Manipulation check ----
l1_corr = c("cook")
unique(ldat$trial_names)
ldat$SES_id = paste(ldat$SES, ldat$stim_id, sep = "_")
unique(ldat$SES_id)
write.csv(unique(ldat$SES_id), "manipulation_check.csv")
write.csv(unique(ldat$SES_id), "manipulation_check.csv", row.names = F)
unique(ldat$SES_id == "low_4" & ldat$item = "MC",)
unique(ldat$item[ldat$SES_id == "low_4" & ldat$item = "MC",])
unique(ldat$item[ldat$SES_id == "low_4" & ldat$item = "MC"])
unique(ldat$item[ldat$SES_id == "low_4" & ldat$item == "MC"])
unique(ldat$values[ldat$SES_id == "low_4" & ldat$item == "MC"])
View(MC_dat)
list.files()
mcheck = read.csv("manipulation_check.csv")
View(mcheck)
MC_dat = ldat[ldat$item == "MC",]
MC_dat = MC_dat[MC_dat$values != "",]
MC_dat = arrange(MC_dat, stim_id)
MC_dat$values[MC_dat$SES_id == "low_1"]
MC_dat$values[MC_dat$SES_id == "low_1"] %in% mcheck$low_1
grep(pattern = "cook| fast food cook" x = MC_dat$values[MC_dat$SES_id == "low_1"])
grep(pattern = "cook| fast food cook", x = MC_dat$values[MC_dat$SES_id == "low_1"])
grepl(pattern = "cook| fast food cook", x = MC_dat$values[MC_dat$SES_id == "low_1"])
grepl(pattern = "cook| fast food cook|Fast Food Cook", x = MC_dat$values[MC_dat$SES_id == "low_1"])
# Manipulation check ----
l1_corr = c("cook", "fast food cook", "Fast Food Cook")
# grepl(pattern = "cook| fast food cook|Fast Food Cook", x = MC_dat$values[MC_dat$SES_id == "low_1"])
grepl(pattern = l1_corr, x = MC_dat$values[MC_dat$SES_id == "low_1"])
MC_dat$values[MC_dat$SES_id == "low_1"] %in% l1_corr
View(MC_dat)
library(stringr)
MC_dat$values = str_squish(MC_dat$values)
MC_dat$values = str_to_lower(str_squish(MC_dat$values))
MC_dat$values[MC_dat$SES_id == "low_1"] %in% mcheck$low_1
MC_dat$values
View(MC_dat)
View(MC_dat)
# Write csv ----
filename = "social_pain_SES_clean_data.csv"
MC_dat = arrange(MC_dat$SES_id)
View(MC_dat)
MC_dat = arrange(MC_dat, MC_dat$SES_id)
View(MC_dat)
write.csv(ldat, filename, row.names = F)
write.csv(MC_dat, filename2, row.names = FALSE)
filename2 = "social_pain_SES_mani_check.csv"
write.csv(MC_dat, filename2, row.names = FALSE)
MC_dat = arrange(MC_dat, MC_dat$SES_id, MC_dat$values)
View(mcheck)
View(MC_dat)
# Write csv ----
filename = "social_pain_SES_clean_data.csv"
filename2 = "social_pain_SES_mani_check.csv"
write.csv(ldat, filename, row.names = FALSE)
write.csv(MC_dat, filename2, row.names = FALSE)
.7*20
q()
q()
